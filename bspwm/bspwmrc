#! /bin/sh

###Monitors###
bspc monitor -d 1 2 3 4 5 6 7 8 9

##autostaaart
pgrep -x sxhkd > /dev/null || sxhkd &
picom &
dunst &
killall nm-applet; nm-applet &
# map caps lock to control
xmodmap ~/.xmodmap

#feh --bg-scale ~/.config/wallpapers/alice.jpg
nitrogen --restore &
#${HOME}/.config/polybar/launch.sh --forest&
#$HOME/.config/polybar/forest/launch.sh
$HOME/.config/polybar/launch.sh
. "${HOME}/.cache/wal/colors.sh"
xsetroot -cursor_name left_ptr &

# multi monitor setup
#
#INTERNAL_MONITOR="eDP"
#EXTERNAL_MONITOR="HDMI-A-0"
## on first load setup default workspaces
#if [[ "$1" = 0 ]]; then
  #if [[ $(xrandr -q | grep "${EXTERNAL_MONITOR} connected") ]]; then
    #bspc monitor "$INTERNAL_MONITOR" -d 1 2 3 4 5 6 7 8 9
    #bspc monitor "$EXTERNAL_MONITOR" -d 1 2 3 4 5 6 7 8 9
    #bspc wm -O "$INTERNAL_MONITOR" "$EXTERNAL_MONITOR"
  #else
    #bspc monitor "$INTERNAL_MONITOR" -d 1 2 3 4 5 6 7 8 9
  #fi
#fi

#monitor_add() {
  ## Move first 4 desktops to external monitor
  #for desktop in $(bspc query -D --names -m "$INTERNAL_MONITOR" | sed 4q); do
    #bspc desktop "$desktop" --to-monitor "$EXTERNAL_MONITOR"
  #done

  ## reorder monitors
  #bspc wm -O "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR"
#}

#monitor_remove() {
  ## Add default temp desktop because a minimum of one desktop is required per monitor
  #bspc monitor "$EXTERNAL_MONITOR" -a Desktop

  ## Move all desktops except the last default desktop to internal monitor
  #for desktop in $(bspc query -D -m "$EXTERNAL_MONITOR"); do
    #bspc desktop "$desktop" --to-monitor "$INTERNAL_MONITOR"
  #done

  ## delete default desktops
  #bspc desktop Desktop --remove

  ## reorder desktops
  #bspc monitor "$INTERNAL_MONITOR" -o 1 2 3 4 5 6 7 8 9
#}

#if [[ $(xrandr -q | grep "${EXTERNAL_MONITOR} connected") ]]; then
  ## set xrandr rules for docked setup
  #xrandr --output "$INTERNAL_MONITOR" --mode 1920x1080 --pos 0x0 --rotate normal --output "$EXTERNAL_MONITOR" --primary --mode 1920x1080 --pos 1920x0 --rotate normal
  #if [[ $(bspc query -D -m "${EXTERNAL_MONITOR}" | wc -l) -ne 9 ]]; then
    #monitor_add
  #fi
  #bspc wm -O "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR"
#else
  ## set xrandr rules for mobile setup
  #xrandr --output "$INTERNAL_MONITOR" --primary --mode 1920x1080 --pos 0x0 --rotate normal --output "$EXTERNAL_MONITOR" --off
  #if [[ $(bspc query -D -m "${INTERNAL_MONITOR}" | wc -l) -ne 9 ]]; then
    #monitor_remove
  #fi
#fi

####BSPWM configs#######


bspc config border_width        1 
bspc config window_gap          3
bspc config top_padding		3

bspc config bottom_padding	0
bspc config left_padding	0
bspc config right_padding	0

bspc config click_to_focus	true
bspc config single_monocle	false
bspc config split_ratio          0.50
bspc config borderless_monocle   true
bspc config gapless_monocle      true
bspc focus_follows_pointer	 true
bspc config focused_border_color "#0d6a6a"



####BSPWM rules########
bspc rule -a surf state=tiled
#bspc rule -a Gimp desktop='^8' state=floating follow=on
bspc rule -a Chromium follow=on
bspc rule -a firefox follow=on
#bspc rule -a mplayer2 state=floating
#bspc rule -a Kupfer.py focus=on
#bspc rule -a Screenkey manage=off
bspc rule -a Zathura state=tiled
bspc rule -a appflowy state=tiled
bspc rule -a emacs state=tiled follow=on
bspc rule -a mpv state=tiled
bspc rule -a Sxiv state=tiled
bspc rule -a *:*:ranger state=floating rectangle=900x500+900+200
##bspc rule -a *:*:music state=floating sticky=on rectangle=900x500+900+200
